# 1.迭代器
# 可迭代对象:具有iter()方法
    # 迭代器：具有__iter__  __next()__方法
    # 迭代器就是用时间换空间
    # 可迭代对象是用空间换时间

# 2.生成器
# 生成器的本质是迭代器，但迭代器不一定是一个生成器

# 迭代器和生成器的最大区别:
# 迭代器:python提供的
# 生成器:程序员自定的

# 迭代器与生成器进行区别:
# 1.查看内存地址
# 2.查看是否具有.send方法
# 3.基于函数的生成器具有yield

# 生成器和迭代器的优点：
# 1.节省空间

# 生成器和迭代器的优点：
# 1.不能直接使用元素
# 2.不能直接查看元素的个数
# 3.耗时
# 4.一次性（单向不可逆）
# 5.使用不灵活

# 定义生成器:
# 1.基于函数定义
# next和yield要一一对应
# yield和return相比：
# 1.可以写多个并且都执行
# 2.能够返回任意、多个数据类型（多个以元组的形式接收）
# 3.默认返回None
# 4.能够记录执行位置
# 5.能够暂停生成器
# yield from 和yield的区别
# yield是将数据整体返回
# yield from 是将数据元素逐个返回


# def func():
#     yield 1
# g = func()  #函数名+()就是在生成一个生成器，获取的是一个生成器的内存地址
# print(next(g)) #触发生成器
