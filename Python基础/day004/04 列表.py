# 列表 --python数据结构之一
# list --列表的关键字
# 可变数据类型

# 列表的作用：容器
# 1.存储大量数据
# 2.存储不同类型的数据
# a = "sdsdff" 字符串中每一个内容是一个元素

# 定义:
# lst = [1,"xxx",True]  #每个元素用,分隔

# 列表：容器 == 书包
# 列表的增加
# lst = ["Python学习手册","核心编程"] #列表实际存储的是内存地址，指向对应数据
# lst.append("流畅的Python")  #追加 在末尾添加
# # None 空
# print(lst)

# 插入
# lst.insert(1,"流畅的Python") #插入 参数1：插入位置的下标（理解为插入后目标索引位置） 参数2：插入的内容
# print(lst)
# 以后尽量少使用insert，影响比较大

# 迭代
# lst.extend("流畅的Python")   #扩展（迭代添加）
# print(lst)


# 列表的删除：（删除内存地址）
# lst = ["大圣","海","心理","一帆","靓仔","石头"]
# lst.remove("心理")  #通过元素名进行删除
# print(lst)

# lst.pop() #弹出 默认删除列表中最后一个元素，并返回被删除的元素
# lst.pop(1) #通过索引进行删除
# print(lst)

# lst.clear() #清空，删除全部元素
# print(lst)

# del lst  #删除整个列表（变量）
# del lst[0]  #通过索引进行删除
# print(lst)

# 列表的修改：（改变内存地址，及地址的指向）
# lst = ["大圣","海","心理","一帆","靓仔","石头"]
# lst[2] = "秀色可餐"
# print(lst)

# 注意：使用切片时，获取的内容就是切片的原数据本身
# a = 10,20,30  #自动转换为元组
# print(a)
# lst[1:4] = 10,20,30,40,50  #可迭代内容，可超限，多的插入
# 迭代添加

#切片获取的内容空间是连续的时候，修改时内容可以多可以少
# lst[1:4] = 10   #报错
# lst[1:4] = "10" #迭代修改
# print(lst)

#切片获取的内容空间是不连续的时候，修改时内容必须一一对应
# lst = ["大圣","海","心理","一帆","靓仔","石头"]
# lst[1:5:2] = ["alex","wusir"]
# print(lst)
# lst[1:5:2] = "alex"  #不会报错，但会因为缺少补充元素无法显示列表结果
# print(lst)

# 查看：
# for 循环
# lst = ["大圣","海","心理","一帆","靓仔","石头"]
# for i in lst:
#     print(i)
# 索引

# 总结：
# 列表是可变、可迭代数据类型，有序的数据结构
# 存储大量的数据，并且可以存储不同数据类型
# 列表是一个容器